When would you want to use a remote repository rather than keeping all your work local?

  Any time that I'm working on a collaborative project.
  When I'm needing to share my code with someone.
  If I want to store my code externally for safety/backup reasons.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

  Because code could have been added that would mess with your code. By allowing you
  to control the versions of the various code files in your repository, you have much
  more control over your working environment.

Describe the differences between forks, clones, and branches. When would you use one
instead of another?

  "Fork" is GitHub's version of cloning that allows a user to clone a GitHub repository
  into their own GitHub repository. This should be used if you're wanting to clone
  someone else's GitHub repository and be able to share the changes you're going to
  make publicly.

  "Clone" is when you're cloning something from somewhere to your local machine.
  "Somewhere" can include GitHub and another repository on your local machine. This
  should be used when you're wanting to replicate a repository and place it somewhere
  on your local machine.

  "Branch" is a term used when, in your repository, you create an additional path off
  of your "master" branch within the git repository. This should be used if you have
  experimental features you're developing for the project that or if you're fixing a
  bug.

What is the benefit of having a copy of the last known state of the remote stored locally?
  
  It gives you and the computer something to compare to the actual repository you're
  storing files in. Without something to compare to the real thing, you wouldn't easily
  be able to determine if something has changed to the actual repository in the time
  you've been editing locally.